
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;

using nu = NUnit.Framework;
using t = alby.northwind.codegen.table ;

namespace alby.northwind.codegen.test
{
	public partial class CodeGenUnitTestClass : acr.CodeGenUnitTestBase
	{
		protected void PopulateObjectsForInsert()
		{
			// Categories
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[1/24] Categories - insert" ) ;
			this.Populate٠Categories( true, obj0٠Categories ) ;
			this.PopulateOverride٠Categories( true, obj0٠Categories ) ;
			base.AssertFlagsBeforeInsert( obj0٠Categories ) ;
			rowcount0٠Categories = factory٠CategoriesFactory.GetRowCountˡ( _connection ) ;
			obj1٠Categories = factory٠CategoriesFactory.Saveˡ( _connection, obj0٠Categories ) ;
			nu.Assert.IsNotNull( obj1٠Categories ) ;
			base.AssertFlagsObjectLoaded( obj1٠Categories ) ;
			base.AssertFlagsAfterInsert( obj0٠Categories ) ;
			rowcount1٠Categories = factory٠CategoriesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Categories, rowcount0٠Categories + 1 ) ;
			 
			// CustomerDemographics
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[2/24] CustomerDemographics - insert" ) ;
			this.Populate٠CustomerDemographics( true, obj0٠CustomerDemographics ) ;
			this.PopulateOverride٠CustomerDemographics( true, obj0٠CustomerDemographics ) ;
			base.AssertFlagsBeforeInsert( obj0٠CustomerDemographics ) ;
			rowcount0٠CustomerDemographics = factory٠CustomerDemographicsFactory.GetRowCountˡ( _connection ) ;
			obj1٠CustomerDemographics = factory٠CustomerDemographicsFactory.Saveˡ( _connection, obj0٠CustomerDemographics ) ;
			nu.Assert.IsNotNull( obj1٠CustomerDemographics ) ;
			base.AssertFlagsObjectLoaded( obj1٠CustomerDemographics ) ;
			base.AssertFlagsAfterInsert( obj0٠CustomerDemographics ) ;
			rowcount1٠CustomerDemographics = factory٠CustomerDemographicsFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠CustomerDemographics, rowcount0٠CustomerDemographics + 1 ) ;
			 
			// Customers
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[3/24] Customers - insert" ) ;
			this.Populate٠Customers( true, obj0٠Customers ) ;
			this.PopulateOverride٠Customers( true, obj0٠Customers ) ;
			base.AssertFlagsBeforeInsert( obj0٠Customers ) ;
			rowcount0٠Customers = factory٠CustomersFactory.GetRowCountˡ( _connection ) ;
			obj1٠Customers = factory٠CustomersFactory.Saveˡ( _connection, obj0٠Customers ) ;
			nu.Assert.IsNotNull( obj1٠Customers ) ;
			base.AssertFlagsObjectLoaded( obj1٠Customers ) ;
			base.AssertFlagsAfterInsert( obj0٠Customers ) ;
			rowcount1٠Customers = factory٠CustomersFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Customers, rowcount0٠Customers + 1 ) ;
			 
			// DatabaseVersion
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[4/24] DatabaseVersion - insert" ) ;
			this.Populate٠DatabaseVersion( true, obj0٠DatabaseVersion ) ;
			this.PopulateOverride٠DatabaseVersion( true, obj0٠DatabaseVersion ) ;
			base.AssertFlagsBeforeInsert( obj0٠DatabaseVersion ) ;
			rowcount0٠DatabaseVersion = factory٠DatabaseVersionFactory.GetRowCountˡ( _connection ) ;
			obj1٠DatabaseVersion = factory٠DatabaseVersionFactory.Saveˡ( _connection, obj0٠DatabaseVersion ) ;
			nu.Assert.IsNotNull( obj1٠DatabaseVersion ) ;
			base.AssertFlagsObjectLoaded( obj1٠DatabaseVersion ) ;
			base.AssertFlagsAfterInsert( obj0٠DatabaseVersion ) ;
			rowcount1٠DatabaseVersion = factory٠DatabaseVersionFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠DatabaseVersion, rowcount0٠DatabaseVersion + 1 ) ;
			 
			// Region
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[5/24] Region - insert" ) ;
			this.Populate٠Region( true, obj0٠Region ) ;
			this.PopulateOverride٠Region( true, obj0٠Region ) ;
			base.AssertFlagsBeforeInsert( obj0٠Region ) ;
			rowcount0٠Region = factory٠RegionFactory.GetRowCountˡ( _connection ) ;
			obj1٠Region = factory٠RegionFactory.Saveˡ( _connection, obj0٠Region ) ;
			nu.Assert.IsNotNull( obj1٠Region ) ;
			base.AssertFlagsObjectLoaded( obj1٠Region ) ;
			base.AssertFlagsAfterInsert( obj0٠Region ) ;
			rowcount1٠Region = factory٠RegionFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Region, rowcount0٠Region + 1 ) ;
			 
			// Shippers
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[6/24] Shippers - insert" ) ;
			this.Populate٠Shippers( true, obj0٠Shippers ) ;
			this.PopulateOverride٠Shippers( true, obj0٠Shippers ) ;
			base.AssertFlagsBeforeInsert( obj0٠Shippers ) ;
			rowcount0٠Shippers = factory٠ShippersFactory.GetRowCountˡ( _connection ) ;
			obj1٠Shippers = factory٠ShippersFactory.Saveˡ( _connection, obj0٠Shippers ) ;
			nu.Assert.IsNotNull( obj1٠Shippers ) ;
			base.AssertFlagsObjectLoaded( obj1٠Shippers ) ;
			base.AssertFlagsAfterInsert( obj0٠Shippers ) ;
			rowcount1٠Shippers = factory٠ShippersFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Shippers, rowcount0٠Shippers + 1 ) ;
			 
			// Suppliers
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[7/24] Suppliers - insert" ) ;
			this.Populate٠Suppliers( true, obj0٠Suppliers ) ;
			this.PopulateOverride٠Suppliers( true, obj0٠Suppliers ) ;
			base.AssertFlagsBeforeInsert( obj0٠Suppliers ) ;
			rowcount0٠Suppliers = factory٠SuppliersFactory.GetRowCountˡ( _connection ) ;
			obj1٠Suppliers = factory٠SuppliersFactory.Saveˡ( _connection, obj0٠Suppliers ) ;
			nu.Assert.IsNotNull( obj1٠Suppliers ) ;
			base.AssertFlagsObjectLoaded( obj1٠Suppliers ) ;
			base.AssertFlagsAfterInsert( obj0٠Suppliers ) ;
			rowcount1٠Suppliers = factory٠SuppliersFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Suppliers, rowcount0٠Suppliers + 1 ) ;
			 
			// sysdiagrams
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[8/24] sysdiagrams - insert" ) ;
			this.Populate٠sysdiagrams( true, obj0٠sysdiagrams ) ;
			this.PopulateOverride٠sysdiagrams( true, obj0٠sysdiagrams ) ;
			base.AssertFlagsBeforeInsert( obj0٠sysdiagrams ) ;
			rowcount0٠sysdiagrams = factory٠sysdiagramsFactory.GetRowCountˡ( _connection ) ;
			obj1٠sysdiagrams = factory٠sysdiagramsFactory.Saveˡ( _connection, obj0٠sysdiagrams ) ;
			nu.Assert.IsNotNull( obj1٠sysdiagrams ) ;
			base.AssertFlagsObjectLoaded( obj1٠sysdiagrams ) ;
			base.AssertFlagsAfterInsert( obj0٠sysdiagrams ) ;
			rowcount1٠sysdiagrams = factory٠sysdiagramsFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠sysdiagrams, rowcount0٠sysdiagrams + 1 ) ;
			 
			// TestTable1
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[9/24] TestTable1 - insert" ) ;
			this.Populate٠TestTable1( true, obj0٠TestTable1 ) ;
			this.PopulateOverride٠TestTable1( true, obj0٠TestTable1 ) ;
			base.AssertFlagsBeforeInsert( obj0٠TestTable1 ) ;
			rowcount0٠TestTable1 = factory٠TestTable1Factory.GetRowCountˡ( _connection ) ;
			obj1٠TestTable1 = factory٠TestTable1Factory.Saveˡ( _connection, obj0٠TestTable1 ) ;
			nu.Assert.IsNotNull( obj1٠TestTable1 ) ;
			base.AssertFlagsObjectLoaded( obj1٠TestTable1 ) ;
			base.AssertFlagsAfterInsert( obj0٠TestTable1 ) ;
			rowcount1٠TestTable1 = factory٠TestTable1Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠TestTable1, rowcount0٠TestTable1 + 1 ) ;
			 
			// TestTable2a
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[10/24] TestTable2a - insert" ) ;
			this.Populate٠TestTable2a( true, obj0٠TestTable2a ) ;
			this.PopulateOverride٠TestTable2a( true, obj0٠TestTable2a ) ;
			base.AssertFlagsBeforeInsert( obj0٠TestTable2a ) ;
			rowcount0٠TestTable2a = factory٠TestTable2aFactory.GetRowCountˡ( _connection ) ;
			obj1٠TestTable2a = factory٠TestTable2aFactory.Saveˡ( _connection, obj0٠TestTable2a ) ;
			nu.Assert.IsNotNull( obj1٠TestTable2a ) ;
			base.AssertFlagsObjectLoaded( obj1٠TestTable2a ) ;
			base.AssertFlagsAfterInsert( obj0٠TestTable2a ) ;
			rowcount1٠TestTable2a = factory٠TestTable2aFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠TestTable2a, rowcount0٠TestTable2a + 1 ) ;
			 
			// TestTable3
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[11/24] TestTable3 - insert" ) ;
			this.Populate٠TestTable3( true, obj0٠TestTable3 ) ;
			this.PopulateOverride٠TestTable3( true, obj0٠TestTable3 ) ;
			base.AssertFlagsBeforeInsert( obj0٠TestTable3 ) ;
			rowcount0٠TestTable3 = factory٠TestTable3Factory.GetRowCountˡ( _connection ) ;
			obj1٠TestTable3 = factory٠TestTable3Factory.Saveˡ( _connection, obj0٠TestTable3 ) ;
			nu.Assert.IsNotNull( obj1٠TestTable3 ) ;
			base.AssertFlagsObjectLoaded( obj1٠TestTable3 ) ;
			base.AssertFlagsAfterInsert( obj0٠TestTable3 ) ;
			rowcount1٠TestTable3 = factory٠TestTable3Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠TestTable3, rowcount0٠TestTable3 + 1 ) ;
			 
			// TestTable4
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[12/24] TestTable4 - insert" ) ;
			this.Populate٠TestTable4( true, obj0٠TestTable4 ) ;
			this.PopulateOverride٠TestTable4( true, obj0٠TestTable4 ) ;
			base.AssertFlagsBeforeInsert( obj0٠TestTable4 ) ;
			rowcount0٠TestTable4 = factory٠TestTable4Factory.GetRowCountˡ( _connection ) ;
			obj1٠TestTable4 = factory٠TestTable4Factory.Saveˡ( _connection, obj0٠TestTable4 ) ;
			nu.Assert.IsNotNull( obj1٠TestTable4 ) ;
			base.AssertFlagsObjectLoaded( obj1٠TestTable4 ) ;
			base.AssertFlagsAfterInsert( obj0٠TestTable4 ) ;
			rowcount1٠TestTable4 = factory٠TestTable4Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠TestTable4, rowcount0٠TestTable4 + 1 ) ;
			 
			// TestTable5
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[13/24] TestTable5 - insert" ) ;
			this.Populate٠TestTable5( true, obj0٠TestTable5 ) ;
			this.PopulateOverride٠TestTable5( true, obj0٠TestTable5 ) ;
			base.AssertFlagsBeforeInsert( obj0٠TestTable5 ) ;
			rowcount0٠TestTable5 = factory٠TestTable5Factory.GetRowCountˡ( _connection ) ;
			obj1٠TestTable5 = factory٠TestTable5Factory.Saveˡ( _connection, obj0٠TestTable5 ) ;
			nu.Assert.IsNotNull( obj1٠TestTable5 ) ;
			base.AssertFlagsObjectLoaded( obj1٠TestTable5 ) ;
			base.AssertFlagsAfterInsert( obj0٠TestTable5 ) ;
			rowcount1٠TestTable5 = factory٠TestTable5Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠TestTable5, rowcount0٠TestTable5 + 1 ) ;
			 
			// TestTable6a
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[14/24] TestTable6a - insert" ) ;
			this.Populate٠TestTable6a( true, obj0٠TestTable6a ) ;
			this.PopulateOverride٠TestTable6a( true, obj0٠TestTable6a ) ;
			base.AssertFlagsBeforeInsert( obj0٠TestTable6a ) ;
			rowcount0٠TestTable6a = factory٠TestTable6aFactory.GetRowCountˡ( _connection ) ;
			obj1٠TestTable6a = factory٠TestTable6aFactory.Saveˡ( _connection, obj0٠TestTable6a ) ;
			nu.Assert.IsNotNull( obj1٠TestTable6a ) ;
			base.AssertFlagsObjectLoaded( obj1٠TestTable6a ) ;
			base.AssertFlagsAfterInsert( obj0٠TestTable6a ) ;
			rowcount1٠TestTable6a = factory٠TestTable6aFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠TestTable6a, rowcount0٠TestTable6a + 1 ) ;
			 
			// フル_ツ
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[15/24] フル_ツ - insert" ) ;
			this.Populate٠フル_ツ( true, obj0٠フル_ツ ) ;
			this.PopulateOverride٠フル_ツ( true, obj0٠フル_ツ ) ;
			base.AssertFlagsBeforeInsert( obj0٠フル_ツ ) ;
			rowcount0٠フル_ツ = factory٠フル_ツFactory.GetRowCountˡ( _connection ) ;
			obj1٠フル_ツ = factory٠フル_ツFactory.Saveˡ( _connection, obj0٠フル_ツ ) ;
			nu.Assert.IsNotNull( obj1٠フル_ツ ) ;
			base.AssertFlagsObjectLoaded( obj1٠フル_ツ ) ;
			base.AssertFlagsAfterInsert( obj0٠フル_ツ ) ;
			rowcount1٠フル_ツ = factory٠フル_ツFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠フル_ツ, rowcount0٠フル_ツ + 1 ) ;
			 
			// CustomerCustomerDemo
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[16/24] CustomerCustomerDemo - insert" ) ;
			this.Populate٠CustomerCustomerDemo( true, obj0٠CustomerCustomerDemo ) ;
			this.PopulateOverride٠CustomerCustomerDemo( true, obj0٠CustomerCustomerDemo ) ;
			base.AssertFlagsBeforeInsert( obj0٠CustomerCustomerDemo ) ;
			rowcount0٠CustomerCustomerDemo = factory٠CustomerCustomerDemoFactory.GetRowCountˡ( _connection ) ;
			obj1٠CustomerCustomerDemo = factory٠CustomerCustomerDemoFactory.Saveˡ( _connection, obj0٠CustomerCustomerDemo ) ;
			nu.Assert.IsNotNull( obj1٠CustomerCustomerDemo ) ;
			base.AssertFlagsObjectLoaded( obj1٠CustomerCustomerDemo ) ;
			base.AssertFlagsAfterInsert( obj0٠CustomerCustomerDemo ) ;
			rowcount1٠CustomerCustomerDemo = factory٠CustomerCustomerDemoFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠CustomerCustomerDemo, rowcount0٠CustomerCustomerDemo + 1 ) ;
			 
			// Employees
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[17/24] Employees - insert" ) ;
			this.Populate٠Employees( true, obj0٠Employees ) ;
			this.PopulateOverride٠Employees( true, obj0٠Employees ) ;
			base.AssertFlagsBeforeInsert( obj0٠Employees ) ;
			rowcount0٠Employees = factory٠EmployeesFactory.GetRowCountˡ( _connection ) ;
			obj1٠Employees = factory٠EmployeesFactory.Saveˡ( _connection, obj0٠Employees ) ;
			nu.Assert.IsNotNull( obj1٠Employees ) ;
			base.AssertFlagsObjectLoaded( obj1٠Employees ) ;
			base.AssertFlagsAfterInsert( obj0٠Employees ) ;
			rowcount1٠Employees = factory٠EmployeesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Employees, rowcount0٠Employees + 1 ) ;
			 
			// Orders
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[18/24] Orders - insert" ) ;
			this.Populate٠Orders( true, obj0٠Orders ) ;
			this.PopulateOverride٠Orders( true, obj0٠Orders ) ;
			base.AssertFlagsBeforeInsert( obj0٠Orders ) ;
			rowcount0٠Orders = factory٠OrdersFactory.GetRowCountˡ( _connection ) ;
			obj1٠Orders = factory٠OrdersFactory.Saveˡ( _connection, obj0٠Orders ) ;
			nu.Assert.IsNotNull( obj1٠Orders ) ;
			base.AssertFlagsObjectLoaded( obj1٠Orders ) ;
			base.AssertFlagsAfterInsert( obj0٠Orders ) ;
			rowcount1٠Orders = factory٠OrdersFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Orders, rowcount0٠Orders + 1 ) ;
			 
			// Products
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[19/24] Products - insert" ) ;
			this.Populate٠Products( true, obj0٠Products ) ;
			this.PopulateOverride٠Products( true, obj0٠Products ) ;
			base.AssertFlagsBeforeInsert( obj0٠Products ) ;
			rowcount0٠Products = factory٠ProductsFactory.GetRowCountˡ( _connection ) ;
			obj1٠Products = factory٠ProductsFactory.Saveˡ( _connection, obj0٠Products ) ;
			nu.Assert.IsNotNull( obj1٠Products ) ;
			base.AssertFlagsObjectLoaded( obj1٠Products ) ;
			base.AssertFlagsAfterInsert( obj0٠Products ) ;
			rowcount1٠Products = factory٠ProductsFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Products, rowcount0٠Products + 1 ) ;
			 
			// Order_Details
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[20/24] Order_Details - insert" ) ;
			this.Populate٠Order_Details( true, obj0٠Order_Details ) ;
			this.PopulateOverride٠Order_Details( true, obj0٠Order_Details ) ;
			base.AssertFlagsBeforeInsert( obj0٠Order_Details ) ;
			rowcount0٠Order_Details = factory٠Order_DetailsFactory.GetRowCountˡ( _connection ) ;
			obj1٠Order_Details = factory٠Order_DetailsFactory.Saveˡ( _connection, obj0٠Order_Details ) ;
			nu.Assert.IsNotNull( obj1٠Order_Details ) ;
			base.AssertFlagsObjectLoaded( obj1٠Order_Details ) ;
			base.AssertFlagsAfterInsert( obj0٠Order_Details ) ;
			rowcount1٠Order_Details = factory٠Order_DetailsFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Order_Details, rowcount0٠Order_Details + 1 ) ;
			 
			// Territories
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[21/24] Territories - insert" ) ;
			this.Populate٠Territories( true, obj0٠Territories ) ;
			this.PopulateOverride٠Territories( true, obj0٠Territories ) ;
			base.AssertFlagsBeforeInsert( obj0٠Territories ) ;
			rowcount0٠Territories = factory٠TerritoriesFactory.GetRowCountˡ( _connection ) ;
			obj1٠Territories = factory٠TerritoriesFactory.Saveˡ( _connection, obj0٠Territories ) ;
			nu.Assert.IsNotNull( obj1٠Territories ) ;
			base.AssertFlagsObjectLoaded( obj1٠Territories ) ;
			base.AssertFlagsAfterInsert( obj0٠Territories ) ;
			rowcount1٠Territories = factory٠TerritoriesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠Territories, rowcount0٠Territories + 1 ) ;
			 
			// EmployeeTerritories
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[22/24] EmployeeTerritories - insert" ) ;
			this.Populate٠EmployeeTerritories( true, obj0٠EmployeeTerritories ) ;
			this.PopulateOverride٠EmployeeTerritories( true, obj0٠EmployeeTerritories ) ;
			base.AssertFlagsBeforeInsert( obj0٠EmployeeTerritories ) ;
			rowcount0٠EmployeeTerritories = factory٠EmployeeTerritoriesFactory.GetRowCountˡ( _connection ) ;
			obj1٠EmployeeTerritories = factory٠EmployeeTerritoriesFactory.Saveˡ( _connection, obj0٠EmployeeTerritories ) ;
			nu.Assert.IsNotNull( obj1٠EmployeeTerritories ) ;
			base.AssertFlagsObjectLoaded( obj1٠EmployeeTerritories ) ;
			base.AssertFlagsAfterInsert( obj0٠EmployeeTerritories ) ;
			rowcount1٠EmployeeTerritories = factory٠EmployeeTerritoriesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠EmployeeTerritories, rowcount0٠EmployeeTerritories + 1 ) ;
			 
			// TestTable2b
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[23/24] TestTable2b - insert" ) ;
			this.Populate٠TestTable2b( true, obj0٠TestTable2b ) ;
			this.PopulateOverride٠TestTable2b( true, obj0٠TestTable2b ) ;
			base.AssertFlagsBeforeInsert( obj0٠TestTable2b ) ;
			rowcount0٠TestTable2b = factory٠TestTable2bFactory.GetRowCountˡ( _connection ) ;
			obj1٠TestTable2b = factory٠TestTable2bFactory.Saveˡ( _connection, obj0٠TestTable2b ) ;
			nu.Assert.IsNotNull( obj1٠TestTable2b ) ;
			base.AssertFlagsObjectLoaded( obj1٠TestTable2b ) ;
			base.AssertFlagsAfterInsert( obj0٠TestTable2b ) ;
			rowcount1٠TestTable2b = factory٠TestTable2bFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠TestTable2b, rowcount0٠TestTable2b + 1 ) ;
			 
			// TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[24/24] TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ - insert" ) ;
			this.Populate٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_( true, obj0٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			this.PopulateOverride٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_( true, obj0٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			base.AssertFlagsBeforeInsert( obj0٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			rowcount0٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ = factory٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_Factory.GetRowCountˡ( _connection ) ;
			obj1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ = factory٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_Factory.Saveˡ( _connection, obj0٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			nu.Assert.IsNotNull( obj1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			base.AssertFlagsObjectLoaded( obj1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			base.AssertFlagsAfterInsert( obj0٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			rowcount1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ = factory٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_, rowcount0٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ + 1 ) ;
			 
		}
	}

}

