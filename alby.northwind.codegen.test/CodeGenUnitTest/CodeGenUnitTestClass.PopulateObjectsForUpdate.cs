
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;

using nu = NUnit.Framework;
using t = alby.northwind.codegen.table ;

namespace alby.northwind.codegen.test
{
	public partial class CodeGenUnitTestClass : acr.CodeGenUnitTestBase
	{
		protected void PopulateObjectsForUpdate()
		{
			// Categories
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[1/24] Categories - update" ) ;
			this.Populate٠Categories( false, obj1٠Categories ) ;
			this.PopulateOverride٠Categories( false, obj1٠Categories ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Categories ) ;
			obj2٠Categories = factory٠CategoriesFactory.Saveˡ( _connection, obj1٠Categories ) ;
			nu.Assert.IsNotNull( obj2٠Categories ) ;
			base.AssertFlagsObjectLoaded( obj2٠Categories ) ;
			base.AssertFlagsAfterUpdate( obj1٠Categories ) ;
			rowcount2٠Categories = factory٠CategoriesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Categories, rowcount1٠Categories ) ;
			 
			// CustomerDemographics
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[2/24] CustomerDemographics - update" ) ;
			this.Populate٠CustomerDemographics( false, obj1٠CustomerDemographics ) ;
			this.PopulateOverride٠CustomerDemographics( false, obj1٠CustomerDemographics ) ;
			base.AssertFlagsBeforeUpdate( obj1٠CustomerDemographics ) ;
			obj2٠CustomerDemographics = factory٠CustomerDemographicsFactory.Saveˡ( _connection, obj1٠CustomerDemographics ) ;
			nu.Assert.IsNotNull( obj2٠CustomerDemographics ) ;
			base.AssertFlagsObjectLoaded( obj2٠CustomerDemographics ) ;
			base.AssertFlagsAfterUpdate( obj1٠CustomerDemographics ) ;
			rowcount2٠CustomerDemographics = factory٠CustomerDemographicsFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠CustomerDemographics, rowcount1٠CustomerDemographics ) ;
			 
			// Customers
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[3/24] Customers - update" ) ;
			this.Populate٠Customers( false, obj1٠Customers ) ;
			this.PopulateOverride٠Customers( false, obj1٠Customers ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Customers ) ;
			obj2٠Customers = factory٠CustomersFactory.Saveˡ( _connection, obj1٠Customers ) ;
			nu.Assert.IsNotNull( obj2٠Customers ) ;
			base.AssertFlagsObjectLoaded( obj2٠Customers ) ;
			base.AssertFlagsAfterUpdate( obj1٠Customers ) ;
			rowcount2٠Customers = factory٠CustomersFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Customers, rowcount1٠Customers ) ;
			 
			// DatabaseVersion
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[4/24] DatabaseVersion - update" ) ;
			this.Populate٠DatabaseVersion( false, obj1٠DatabaseVersion ) ;
			this.PopulateOverride٠DatabaseVersion( false, obj1٠DatabaseVersion ) ;
			base.AssertFlagsBeforeUpdate( obj1٠DatabaseVersion ) ;
			obj2٠DatabaseVersion = factory٠DatabaseVersionFactory.Saveˡ( _connection, obj1٠DatabaseVersion ) ;
			nu.Assert.IsNotNull( obj2٠DatabaseVersion ) ;
			base.AssertFlagsObjectLoaded( obj2٠DatabaseVersion ) ;
			base.AssertFlagsAfterUpdate( obj1٠DatabaseVersion ) ;
			rowcount2٠DatabaseVersion = factory٠DatabaseVersionFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠DatabaseVersion, rowcount1٠DatabaseVersion ) ;
			 
			// Region
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[5/24] Region - update" ) ;
			this.Populate٠Region( false, obj1٠Region ) ;
			this.PopulateOverride٠Region( false, obj1٠Region ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Region ) ;
			obj2٠Region = factory٠RegionFactory.Saveˡ( _connection, obj1٠Region ) ;
			nu.Assert.IsNotNull( obj2٠Region ) ;
			base.AssertFlagsObjectLoaded( obj2٠Region ) ;
			base.AssertFlagsAfterUpdate( obj1٠Region ) ;
			rowcount2٠Region = factory٠RegionFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Region, rowcount1٠Region ) ;
			 
			// Shippers
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[6/24] Shippers - update" ) ;
			this.Populate٠Shippers( false, obj1٠Shippers ) ;
			this.PopulateOverride٠Shippers( false, obj1٠Shippers ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Shippers ) ;
			obj2٠Shippers = factory٠ShippersFactory.Saveˡ( _connection, obj1٠Shippers ) ;
			nu.Assert.IsNotNull( obj2٠Shippers ) ;
			base.AssertFlagsObjectLoaded( obj2٠Shippers ) ;
			base.AssertFlagsAfterUpdate( obj1٠Shippers ) ;
			rowcount2٠Shippers = factory٠ShippersFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Shippers, rowcount1٠Shippers ) ;
			 
			// Suppliers
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[7/24] Suppliers - update" ) ;
			this.Populate٠Suppliers( false, obj1٠Suppliers ) ;
			this.PopulateOverride٠Suppliers( false, obj1٠Suppliers ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Suppliers ) ;
			obj2٠Suppliers = factory٠SuppliersFactory.Saveˡ( _connection, obj1٠Suppliers ) ;
			nu.Assert.IsNotNull( obj2٠Suppliers ) ;
			base.AssertFlagsObjectLoaded( obj2٠Suppliers ) ;
			base.AssertFlagsAfterUpdate( obj1٠Suppliers ) ;
			rowcount2٠Suppliers = factory٠SuppliersFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Suppliers, rowcount1٠Suppliers ) ;
			 
			// sysdiagrams
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[8/24] sysdiagrams - update" ) ;
			this.Populate٠sysdiagrams( false, obj1٠sysdiagrams ) ;
			this.PopulateOverride٠sysdiagrams( false, obj1٠sysdiagrams ) ;
			base.AssertFlagsBeforeUpdate( obj1٠sysdiagrams ) ;
			obj2٠sysdiagrams = factory٠sysdiagramsFactory.Saveˡ( _connection, obj1٠sysdiagrams ) ;
			nu.Assert.IsNotNull( obj2٠sysdiagrams ) ;
			base.AssertFlagsObjectLoaded( obj2٠sysdiagrams ) ;
			base.AssertFlagsAfterUpdate( obj1٠sysdiagrams ) ;
			rowcount2٠sysdiagrams = factory٠sysdiagramsFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠sysdiagrams, rowcount1٠sysdiagrams ) ;
			 
			// TestTable1
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[9/24] TestTable1 - update" ) ;
			this.Populate٠TestTable1( false, obj1٠TestTable1 ) ;
			this.PopulateOverride٠TestTable1( false, obj1٠TestTable1 ) ;
			base.AssertFlagsBeforeUpdate( obj1٠TestTable1 ) ;
			obj2٠TestTable1 = factory٠TestTable1Factory.Saveˡ( _connection, obj1٠TestTable1 ) ;
			nu.Assert.IsNotNull( obj2٠TestTable1 ) ;
			base.AssertFlagsObjectLoaded( obj2٠TestTable1 ) ;
			base.AssertFlagsAfterUpdate( obj1٠TestTable1 ) ;
			rowcount2٠TestTable1 = factory٠TestTable1Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠TestTable1, rowcount1٠TestTable1 ) ;
			 
			// TestTable2a
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[10/24] TestTable2a - update" ) ;
			this.Populate٠TestTable2a( false, obj1٠TestTable2a ) ;
			this.PopulateOverride٠TestTable2a( false, obj1٠TestTable2a ) ;
			base.AssertFlagsBeforeUpdate( obj1٠TestTable2a ) ;
			obj2٠TestTable2a = factory٠TestTable2aFactory.Saveˡ( _connection, obj1٠TestTable2a ) ;
			nu.Assert.IsNotNull( obj2٠TestTable2a ) ;
			base.AssertFlagsObjectLoaded( obj2٠TestTable2a ) ;
			base.AssertFlagsAfterUpdate( obj1٠TestTable2a ) ;
			rowcount2٠TestTable2a = factory٠TestTable2aFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠TestTable2a, rowcount1٠TestTable2a ) ;
			 
			// TestTable3
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[11/24] TestTable3 - update" ) ;
			this.Populate٠TestTable3( false, obj1٠TestTable3 ) ;
			this.PopulateOverride٠TestTable3( false, obj1٠TestTable3 ) ;
			base.AssertFlagsBeforeUpdate( obj1٠TestTable3 ) ;
			obj2٠TestTable3 = factory٠TestTable3Factory.Saveˡ( _connection, obj1٠TestTable3 ) ;
			nu.Assert.IsNotNull( obj2٠TestTable3 ) ;
			base.AssertFlagsObjectLoaded( obj2٠TestTable3 ) ;
			base.AssertFlagsAfterUpdate( obj1٠TestTable3 ) ;
			rowcount2٠TestTable3 = factory٠TestTable3Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠TestTable3, rowcount1٠TestTable3 ) ;
			 
			// TestTable4
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[12/24] TestTable4 - update" ) ;
			this.Populate٠TestTable4( false, obj1٠TestTable4 ) ;
			this.PopulateOverride٠TestTable4( false, obj1٠TestTable4 ) ;
			base.AssertFlagsBeforeUpdate( obj1٠TestTable4 ) ;
			obj2٠TestTable4 = factory٠TestTable4Factory.Saveˡ( _connection, obj1٠TestTable4 ) ;
			nu.Assert.IsNotNull( obj2٠TestTable4 ) ;
			base.AssertFlagsObjectLoaded( obj2٠TestTable4 ) ;
			base.AssertFlagsAfterUpdate( obj1٠TestTable4 ) ;
			rowcount2٠TestTable4 = factory٠TestTable4Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠TestTable4, rowcount1٠TestTable4 ) ;
			 
			// TestTable5
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[13/24] TestTable5 - update" ) ;
			this.Populate٠TestTable5( false, obj1٠TestTable5 ) ;
			this.PopulateOverride٠TestTable5( false, obj1٠TestTable5 ) ;
			base.AssertFlagsBeforeUpdate( obj1٠TestTable5 ) ;
			obj2٠TestTable5 = factory٠TestTable5Factory.Saveˡ( _connection, obj1٠TestTable5 ) ;
			nu.Assert.IsNotNull( obj2٠TestTable5 ) ;
			base.AssertFlagsObjectLoaded( obj2٠TestTable5 ) ;
			base.AssertFlagsAfterUpdate( obj1٠TestTable5 ) ;
			rowcount2٠TestTable5 = factory٠TestTable5Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠TestTable5, rowcount1٠TestTable5 ) ;
			 
			// TestTable6a
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[14/24] TestTable6a - update" ) ;
			this.Populate٠TestTable6a( false, obj1٠TestTable6a ) ;
			this.PopulateOverride٠TestTable6a( false, obj1٠TestTable6a ) ;
			base.AssertFlagsBeforeUpdate( obj1٠TestTable6a ) ;
			obj2٠TestTable6a = factory٠TestTable6aFactory.Saveˡ( _connection, obj1٠TestTable6a ) ;
			nu.Assert.IsNotNull( obj2٠TestTable6a ) ;
			base.AssertFlagsObjectLoaded( obj2٠TestTable6a ) ;
			base.AssertFlagsAfterUpdate( obj1٠TestTable6a ) ;
			rowcount2٠TestTable6a = factory٠TestTable6aFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠TestTable6a, rowcount1٠TestTable6a ) ;
			 
			// フル_ツ
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[15/24] フル_ツ - update" ) ;
			this.Populate٠フル_ツ( false, obj1٠フル_ツ ) ;
			this.PopulateOverride٠フル_ツ( false, obj1٠フル_ツ ) ;
			base.AssertFlagsBeforeUpdate( obj1٠フル_ツ ) ;
			obj2٠フル_ツ = factory٠フル_ツFactory.Saveˡ( _connection, obj1٠フル_ツ ) ;
			nu.Assert.IsNotNull( obj2٠フル_ツ ) ;
			base.AssertFlagsObjectLoaded( obj2٠フル_ツ ) ;
			base.AssertFlagsAfterUpdate( obj1٠フル_ツ ) ;
			rowcount2٠フル_ツ = factory٠フル_ツFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠フル_ツ, rowcount1٠フル_ツ ) ;
			 
			// CustomerCustomerDemo
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[16/24] CustomerCustomerDemo - update" ) ;
			this.Populate٠CustomerCustomerDemo( false, obj1٠CustomerCustomerDemo ) ;
			this.PopulateOverride٠CustomerCustomerDemo( false, obj1٠CustomerCustomerDemo ) ;
			base.AssertFlagsBeforeUpdate( obj1٠CustomerCustomerDemo ) ;
			obj2٠CustomerCustomerDemo = factory٠CustomerCustomerDemoFactory.Saveˡ( _connection, obj1٠CustomerCustomerDemo ) ;
			nu.Assert.IsNotNull( obj2٠CustomerCustomerDemo ) ;
			base.AssertFlagsObjectLoaded( obj2٠CustomerCustomerDemo ) ;
			base.AssertFlagsAfterUpdate( obj1٠CustomerCustomerDemo ) ;
			rowcount2٠CustomerCustomerDemo = factory٠CustomerCustomerDemoFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠CustomerCustomerDemo, rowcount1٠CustomerCustomerDemo ) ;
			 
			// Employees
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[17/24] Employees - update" ) ;
			this.Populate٠Employees( false, obj1٠Employees ) ;
			this.PopulateOverride٠Employees( false, obj1٠Employees ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Employees ) ;
			obj2٠Employees = factory٠EmployeesFactory.Saveˡ( _connection, obj1٠Employees ) ;
			nu.Assert.IsNotNull( obj2٠Employees ) ;
			base.AssertFlagsObjectLoaded( obj2٠Employees ) ;
			base.AssertFlagsAfterUpdate( obj1٠Employees ) ;
			rowcount2٠Employees = factory٠EmployeesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Employees, rowcount1٠Employees ) ;
			 
			// Orders
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[18/24] Orders - update" ) ;
			this.Populate٠Orders( false, obj1٠Orders ) ;
			this.PopulateOverride٠Orders( false, obj1٠Orders ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Orders ) ;
			obj2٠Orders = factory٠OrdersFactory.Saveˡ( _connection, obj1٠Orders ) ;
			nu.Assert.IsNotNull( obj2٠Orders ) ;
			base.AssertFlagsObjectLoaded( obj2٠Orders ) ;
			base.AssertFlagsAfterUpdate( obj1٠Orders ) ;
			rowcount2٠Orders = factory٠OrdersFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Orders, rowcount1٠Orders ) ;
			 
			// Products
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[19/24] Products - update" ) ;
			this.Populate٠Products( false, obj1٠Products ) ;
			this.PopulateOverride٠Products( false, obj1٠Products ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Products ) ;
			obj2٠Products = factory٠ProductsFactory.Saveˡ( _connection, obj1٠Products ) ;
			nu.Assert.IsNotNull( obj2٠Products ) ;
			base.AssertFlagsObjectLoaded( obj2٠Products ) ;
			base.AssertFlagsAfterUpdate( obj1٠Products ) ;
			rowcount2٠Products = factory٠ProductsFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Products, rowcount1٠Products ) ;
			 
			// Order_Details
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[20/24] Order_Details - update" ) ;
			this.Populate٠Order_Details( false, obj1٠Order_Details ) ;
			this.PopulateOverride٠Order_Details( false, obj1٠Order_Details ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Order_Details ) ;
			obj2٠Order_Details = factory٠Order_DetailsFactory.Saveˡ( _connection, obj1٠Order_Details ) ;
			nu.Assert.IsNotNull( obj2٠Order_Details ) ;
			base.AssertFlagsObjectLoaded( obj2٠Order_Details ) ;
			base.AssertFlagsAfterUpdate( obj1٠Order_Details ) ;
			rowcount2٠Order_Details = factory٠Order_DetailsFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Order_Details, rowcount1٠Order_Details ) ;
			 
			// Territories
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[21/24] Territories - update" ) ;
			this.Populate٠Territories( false, obj1٠Territories ) ;
			this.PopulateOverride٠Territories( false, obj1٠Territories ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Territories ) ;
			obj2٠Territories = factory٠TerritoriesFactory.Saveˡ( _connection, obj1٠Territories ) ;
			nu.Assert.IsNotNull( obj2٠Territories ) ;
			base.AssertFlagsObjectLoaded( obj2٠Territories ) ;
			base.AssertFlagsAfterUpdate( obj1٠Territories ) ;
			rowcount2٠Territories = factory٠TerritoriesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Territories, rowcount1٠Territories ) ;
			 
			// EmployeeTerritories
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[22/24] EmployeeTerritories - update" ) ;
			this.Populate٠EmployeeTerritories( false, obj1٠EmployeeTerritories ) ;
			this.PopulateOverride٠EmployeeTerritories( false, obj1٠EmployeeTerritories ) ;
			base.AssertFlagsBeforeUpdate( obj1٠EmployeeTerritories ) ;
			obj2٠EmployeeTerritories = factory٠EmployeeTerritoriesFactory.Saveˡ( _connection, obj1٠EmployeeTerritories ) ;
			nu.Assert.IsNotNull( obj2٠EmployeeTerritories ) ;
			base.AssertFlagsObjectLoaded( obj2٠EmployeeTerritories ) ;
			base.AssertFlagsAfterUpdate( obj1٠EmployeeTerritories ) ;
			rowcount2٠EmployeeTerritories = factory٠EmployeeTerritoriesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠EmployeeTerritories, rowcount1٠EmployeeTerritories ) ;
			 
			// TestTable2b
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[23/24] TestTable2b - update" ) ;
			this.Populate٠TestTable2b( false, obj1٠TestTable2b ) ;
			this.PopulateOverride٠TestTable2b( false, obj1٠TestTable2b ) ;
			base.AssertFlagsBeforeUpdate( obj1٠TestTable2b ) ;
			obj2٠TestTable2b = factory٠TestTable2bFactory.Saveˡ( _connection, obj1٠TestTable2b ) ;
			nu.Assert.IsNotNull( obj2٠TestTable2b ) ;
			base.AssertFlagsObjectLoaded( obj2٠TestTable2b ) ;
			base.AssertFlagsAfterUpdate( obj1٠TestTable2b ) ;
			rowcount2٠TestTable2b = factory٠TestTable2bFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠TestTable2b, rowcount1٠TestTable2b ) ;
			 
			// TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[24/24] TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ - update" ) ;
			this.Populate٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_( false, obj1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			this.PopulateOverride٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_( false, obj1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			base.AssertFlagsBeforeUpdate( obj1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			obj2٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ = factory٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_Factory.Saveˡ( _connection, obj1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			nu.Assert.IsNotNull( obj2٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			base.AssertFlagsObjectLoaded( obj2٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			base.AssertFlagsAfterUpdate( obj1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			rowcount2٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ = factory٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_Factory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_, rowcount1٠TestTable7Unicode_ẻẽếℚℛℜᾈᾉᾊᄐᄑᄒ___ⅠⅡⅢⅴⅵⅶɑ̀ɒ́ɑ̂ािी०१२︳︴﹍﹎﹏_ ) ;
			 
		}
	}

}

