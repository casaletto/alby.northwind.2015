
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.northwind.codegen;

namespace alby.northwind.codegen.storedProcedure
{
	public partial class CodegenTestResultSetTypesAllNull٠rs1 : acr.RowBase
	{
		public const string column٠my_bigint  = "my_bigint" ;
		public const string column٠my_binary  = "my_binary" ;
		public const string column٠my_bit  = "my_bit" ;
		public const string column٠my_char  = "my_char" ;
		public const string column٠my_date  = "my_date" ;
		public const string column٠my_datetime  = "my_datetime" ;
		public const string column٠my_datetime2  = "my_datetime2" ;
		public const string column٠my_datetimeoffset  = "my_datetimeoffset" ;
		public const string column٠my_decimal  = "my_decimal" ;
		public const string column٠my_float  = "my_float" ;
		public const string column٠my_geography  = "my_geography" ;
		public const string column٠my_geometry  = "my_geometry" ;
		public const string column٠my_hierarchyid  = "my_hierarchyid" ;
		public const string column٠my_image  = "my_image" ;
		public const string column٠my_int  = "my_int" ;
		public const string column٠my_money  = "my_money" ;
		public const string column٠my_nchar  = "my_nchar" ;
		public const string column٠my_ntext  = "my_ntext" ;
		public const string column٠my_numeric  = "my_numeric" ;
		public const string column٠my_nvarchar  = "my_nvarchar" ;
		public const string column٠my_real  = "my_real" ;
		public const string column٠my_rowversion  = "my_rowversion" ;
		public const string column٠my_smalldatetime  = "my_smalldatetime" ;
		public const string column٠my_smallint  = "my_smallint" ;
		public const string column٠my_smallmoney  = "my_smallmoney" ;
		public const string column٠my_sql_variant  = "my_sql_variant" ;
		public const string column٠my_text  = "my_text" ;
		public const string column٠my_time  = "my_time" ;
		public const string column٠my_timestamp  = "my_timestamp" ;
		public const string column٠my_tinyint  = "my_tinyint" ;
		public const string column٠my_uniqueidentifier  = "my_uniqueidentifier" ;
		public const string column٠my_varbinary  = "my_varbinary" ;
		public const string column٠my_varchar  = "my_varchar" ;
		public const string column٠my_xml  = "my_xml" ;
		 
		public long? my_bigint
		{
			get
			{
				return base.GetValueˡ<long?>( _dicˡ, column٠my_bigint ) ; 
			}
			set
			{
				base.SetValueˡ<long?>( _dicˡ, column٠my_bigint, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public byte[] my_binary
		{
			get
			{
				return base.GetValueˡ<byte[]>( _dicˡ, column٠my_binary ) ; 
			}
			set
			{
				base.SetValueˡ<byte[]>( _dicˡ, column٠my_binary, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public bool? my_bit
		{
			get
			{
				return base.GetValueˡ<bool?>( _dicˡ, column٠my_bit ) ; 
			}
			set
			{
				base.SetValueˡ<bool?>( _dicˡ, column٠my_bit, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public string my_char
		{
			get
			{
				return base.GetValueˡ<string>( _dicˡ, column٠my_char ) ; 
			}
			set
			{
				base.SetValueˡ<string>( _dicˡ, column٠my_char, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public DateTime? my_date
		{
			get
			{
				return base.GetValueˡ<DateTime?>( _dicˡ, column٠my_date ) ; 
			}
			set
			{
				base.SetValueˡ<DateTime?>( _dicˡ, column٠my_date, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public DateTime? my_datetime
		{
			get
			{
				return base.GetValueˡ<DateTime?>( _dicˡ, column٠my_datetime ) ; 
			}
			set
			{
				base.SetValueˡ<DateTime?>( _dicˡ, column٠my_datetime, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public DateTime? my_datetime2
		{
			get
			{
				return base.GetValueˡ<DateTime?>( _dicˡ, column٠my_datetime2 ) ; 
			}
			set
			{
				base.SetValueˡ<DateTime?>( _dicˡ, column٠my_datetime2, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public DateTimeOffset? my_datetimeoffset
		{
			get
			{
				return base.GetValueˡ<DateTimeOffset?>( _dicˡ, column٠my_datetimeoffset ) ; 
			}
			set
			{
				base.SetValueˡ<DateTimeOffset?>( _dicˡ, column٠my_datetimeoffset, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public decimal? my_decimal
		{
			get
			{
				return base.GetValueˡ<decimal?>( _dicˡ, column٠my_decimal ) ; 
			}
			set
			{
				base.SetValueˡ<decimal?>( _dicˡ, column٠my_decimal, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public double? my_float
		{
			get
			{
				return base.GetValueˡ<double?>( _dicˡ, column٠my_float ) ; 
			}
			set
			{
				base.SetValueˡ<double?>( _dicˡ, column٠my_float, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public mst.SqlGeography my_geography
		{
			get
			{
				return base.GetValueˡ<mst.SqlGeography>( _dicˡ, column٠my_geography ) ; 
			}
			set
			{
				base.SetValueˡ<mst.SqlGeography>( _dicˡ, column٠my_geography, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public mst.SqlGeometry my_geometry
		{
			get
			{
				return base.GetValueˡ<mst.SqlGeometry>( _dicˡ, column٠my_geometry ) ; 
			}
			set
			{
				base.SetValueˡ<mst.SqlGeometry>( _dicˡ, column٠my_geometry, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public mst.SqlHierarchyId? my_hierarchyid
		{
			get
			{
				return base.GetValueˡ<mst.SqlHierarchyId?>( _dicˡ, column٠my_hierarchyid ) ; 
			}
			set
			{
				base.SetValueˡ<mst.SqlHierarchyId?>( _dicˡ, column٠my_hierarchyid, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public byte[] my_image
		{
			get
			{
				return base.GetValueˡ<byte[]>( _dicˡ, column٠my_image ) ; 
			}
			set
			{
				base.SetValueˡ<byte[]>( _dicˡ, column٠my_image, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public int? my_int
		{
			get
			{
				return base.GetValueˡ<int?>( _dicˡ, column٠my_int ) ; 
			}
			set
			{
				base.SetValueˡ<int?>( _dicˡ, column٠my_int, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public decimal? my_money
		{
			get
			{
				return base.GetValueˡ<decimal?>( _dicˡ, column٠my_money ) ; 
			}
			set
			{
				base.SetValueˡ<decimal?>( _dicˡ, column٠my_money, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public string my_nchar
		{
			get
			{
				return base.GetValueˡ<string>( _dicˡ, column٠my_nchar ) ; 
			}
			set
			{
				base.SetValueˡ<string>( _dicˡ, column٠my_nchar, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public string my_ntext
		{
			get
			{
				return base.GetValueˡ<string>( _dicˡ, column٠my_ntext ) ; 
			}
			set
			{
				base.SetValueˡ<string>( _dicˡ, column٠my_ntext, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public decimal? my_numeric
		{
			get
			{
				return base.GetValueˡ<decimal?>( _dicˡ, column٠my_numeric ) ; 
			}
			set
			{
				base.SetValueˡ<decimal?>( _dicˡ, column٠my_numeric, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public string my_nvarchar
		{
			get
			{
				return base.GetValueˡ<string>( _dicˡ, column٠my_nvarchar ) ; 
			}
			set
			{
				base.SetValueˡ<string>( _dicˡ, column٠my_nvarchar, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public float? my_real
		{
			get
			{
				return base.GetValueˡ<float?>( _dicˡ, column٠my_real ) ; 
			}
			set
			{
				base.SetValueˡ<float?>( _dicˡ, column٠my_real, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public byte[] my_rowversion
		{
			get
			{
				return base.GetValueˡ<byte[]>( _dicˡ, column٠my_rowversion ) ; 
			}
			set
			{
				base.SetValueˡ<byte[]>( _dicˡ, column٠my_rowversion, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public DateTime? my_smalldatetime
		{
			get
			{
				return base.GetValueˡ<DateTime?>( _dicˡ, column٠my_smalldatetime ) ; 
			}
			set
			{
				base.SetValueˡ<DateTime?>( _dicˡ, column٠my_smalldatetime, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public short? my_smallint
		{
			get
			{
				return base.GetValueˡ<short?>( _dicˡ, column٠my_smallint ) ; 
			}
			set
			{
				base.SetValueˡ<short?>( _dicˡ, column٠my_smallint, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public decimal? my_smallmoney
		{
			get
			{
				return base.GetValueˡ<decimal?>( _dicˡ, column٠my_smallmoney ) ; 
			}
			set
			{
				base.SetValueˡ<decimal?>( _dicˡ, column٠my_smallmoney, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public object my_sql_variant
		{
			get
			{
				return base.GetValueˡ<object>( _dicˡ, column٠my_sql_variant ) ; 
			}
			set
			{
				base.SetValueˡ<object>( _dicˡ, column٠my_sql_variant, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public string my_text
		{
			get
			{
				return base.GetValueˡ<string>( _dicˡ, column٠my_text ) ; 
			}
			set
			{
				base.SetValueˡ<string>( _dicˡ, column٠my_text, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public TimeSpan? my_time
		{
			get
			{
				return base.GetValueˡ<TimeSpan?>( _dicˡ, column٠my_time ) ; 
			}
			set
			{
				base.SetValueˡ<TimeSpan?>( _dicˡ, column٠my_time, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public byte[] my_timestamp
		{
			get
			{
				return base.GetValueˡ<byte[]>( _dicˡ, column٠my_timestamp ) ; 
			}
			set
			{
				base.SetValueˡ<byte[]>( _dicˡ, column٠my_timestamp, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public byte? my_tinyint
		{
			get
			{
				return base.GetValueˡ<byte?>( _dicˡ, column٠my_tinyint ) ; 
			}
			set
			{
				base.SetValueˡ<byte?>( _dicˡ, column٠my_tinyint, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public Guid? my_uniqueidentifier
		{
			get
			{
				return base.GetValueˡ<Guid?>( _dicˡ, column٠my_uniqueidentifier ) ; 
			}
			set
			{
				base.SetValueˡ<Guid?>( _dicˡ, column٠my_uniqueidentifier, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public byte[] my_varbinary
		{
			get
			{
				return base.GetValueˡ<byte[]>( _dicˡ, column٠my_varbinary ) ; 
			}
			set
			{
				base.SetValueˡ<byte[]>( _dicˡ, column٠my_varbinary, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public string my_varchar
		{
			get
			{
				return base.GetValueˡ<string>( _dicˡ, column٠my_varchar ) ; 
			}
			set
			{
				base.SetValueˡ<string>( _dicˡ, column٠my_varchar, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public string my_xml
		{
			get
			{
				return base.GetValueˡ<string>( _dicˡ, column٠my_xml ) ; 
			}
			set
			{
				base.SetValueˡ<string>( _dicˡ, column٠my_xml, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public CodegenTestResultSetTypesAllNull٠rs1() : base()
		{
			base._dicˡ[ column٠my_bigint ] = null ;
			base._dicˡ[ column٠my_binary ] = null ;
			base._dicˡ[ column٠my_bit ] = null ;
			base._dicˡ[ column٠my_char ] = null ;
			base._dicˡ[ column٠my_date ] = null ;
			base._dicˡ[ column٠my_datetime ] = null ;
			base._dicˡ[ column٠my_datetime2 ] = null ;
			base._dicˡ[ column٠my_datetimeoffset ] = null ;
			base._dicˡ[ column٠my_decimal ] = null ;
			base._dicˡ[ column٠my_float ] = null ;
			base._dicˡ[ column٠my_geography ] = null ;
			base._dicˡ[ column٠my_geometry ] = null ;
			base._dicˡ[ column٠my_hierarchyid ] = null ;
			base._dicˡ[ column٠my_image ] = null ;
			base._dicˡ[ column٠my_int ] = null ;
			base._dicˡ[ column٠my_money ] = null ;
			base._dicˡ[ column٠my_nchar ] = null ;
			base._dicˡ[ column٠my_ntext ] = null ;
			base._dicˡ[ column٠my_numeric ] = null ;
			base._dicˡ[ column٠my_nvarchar ] = null ;
			base._dicˡ[ column٠my_real ] = null ;
			base._dicˡ[ column٠my_rowversion ] = null ;
			base._dicˡ[ column٠my_smalldatetime ] = null ;
			base._dicˡ[ column٠my_smallint ] = null ;
			base._dicˡ[ column٠my_smallmoney ] = null ;
			base._dicˡ[ column٠my_sql_variant ] = null ;
			base._dicˡ[ column٠my_text ] = null ;
			base._dicˡ[ column٠my_time ] = null ;
			base._dicˡ[ column٠my_timestamp ] = null ;
			base._dicˡ[ column٠my_tinyint ] = null ;
			base._dicˡ[ column٠my_uniqueidentifier ] = null ;
			base._dicˡ[ column٠my_varbinary ] = null ;
			base._dicˡ[ column٠my_varchar ] = null ;
			base._dicˡ[ column٠my_xml ] = null ;
		 
		}

	}

}

