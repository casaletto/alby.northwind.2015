
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.northwind.codegen;

namespace alby.northwind.codegen.storedProcedure
{
	public partial class MyUdtTableType٠ttlist : scg.List< MyUdtTableType٠tt >, scg.IEnumerable< mss.SqlDataRecord >
	{
		scg.List< MyUdtTableType٠tt > _list = null ;
		 
		public MyUdtTableType٠ttlist( scg.List< MyUdtTableType٠tt > list )
		{
			_list = list ;
		}
		 
		scg.IEnumerator< mss.SqlDataRecord > scg.IEnumerable< mss.SqlDataRecord >.GetEnumerator()
		{
			var sdr = new mss.SqlDataRecord
			(
				new mss.SqlMetaData( "Name", sd.SqlDbType.NVarChar, 50 ) ,
				new mss.SqlMetaData( "MyGeography", sd.SqlDbType.NVarChar, -1 ) ,
				new mss.SqlMetaData( "MyGeometry", sd.SqlDbType.NVarChar, -1 ) ,
				new mss.SqlMetaData( "MyHierarchyid", sd.SqlDbType.NVarChar, -1 ) 
			) ;
			 
			foreach ( var i in this._list ) 
			{
				if ( i.Name == null )
					sdr.SetDBNull( 0 ) ;
				else
					sdr.SetString( 0, i.Name ) ; 
			 
				if ( i.MyGeography == null )
					sdr.SetDBNull( 1 ) ;
				else
					sdr.SetValue( 1, i.MyGeography.ToString() ) ; 
			 
				if ( i.MyGeometry == null )
					sdr.SetDBNull( 2 ) ;
				else
					sdr.SetValue( 2, i.MyGeometry.ToString() ) ; 
			 
				if ( i.MyHierarchyid == null )
					sdr.SetDBNull( 3 ) ;
				else
					sdr.SetValue( 3, i.MyHierarchyid.ToString() ) ; 
			 
				yield return sdr ; 
			}
			 
		}

	}

}

