
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.northwind.codegen;

namespace alby.northwind.codegen.storedProcedure
{
	public partial class StoredProcedureFactory : acr.StoredProcedureFactoryBase< ns.database.NorthwindDatabaseSingletonHelper, ns.database.NorthwindDatabase >
	{
		public int CodegenTestParameters
		(
			sds.SqlConnection connˡ, 
			long? my_in_bigint, 
			byte[] my_in_binary, 
			bool? my_in_bit, 
			string my_in_char, 
			DateTime? my_in_date, 
			DateTime? my_in_datetime, 
			DateTime? my_in_datetime2, 
			DateTimeOffset? my_in_datetimeoffset, 
			decimal? my_in_decimal, 
			double? my_in_float, 
			mst.SqlGeography my_in_geography, 
			mst.SqlGeometry my_in_geometry, 
			mst.SqlHierarchyId? my_in_hierarchyid, 
			byte[] my_in_image, 
			int? my_in_int, 
			decimal? my_in_money, 
			string my_in_nchar, 
			string my_in_ntext, 
			decimal? my_in_numeric, 
			string my_in_nvarchar, 
			float? my_in_real, 
			byte[] my_in_rowversion, 
			DateTime? my_in_smalldatetime, 
			short? my_in_smallint, 
			decimal? my_in_smallmoney, 
			object my_in_sql_variant, 
			string my_in_text, 
			TimeSpan? my_in_time, 
			byte[] my_in_timestamp, 
			byte? my_in_tinyint, 
			Guid? my_in_uniqueidentifier, 
			byte[] my_in_varbinary, 
			string my_in_varchar, 
			string my_in_xml, 
			ref long? my_out_bigint, 
			ref byte[] my_out_binary, 
			ref bool? my_out_bit, 
			ref string my_out_char, 
			ref DateTime? my_out_date, 
			ref DateTime? my_out_datetime, 
			ref DateTime? my_out_datetime2, 
			ref DateTimeOffset? my_out_datetimeoffset, 
			ref decimal? my_out_decimal, 
			ref double? my_out_float, 
			ref mst.SqlGeography my_out_geography, 
			ref mst.SqlGeometry my_out_geometry, 
			ref mst.SqlHierarchyId? my_out_hierarchyid, 
			ref byte[] my_out_image, 
			ref int? my_out_int, 
			ref decimal? my_out_money, 
			ref string my_out_nchar, 
			ref string my_out_ntext, 
			ref decimal? my_out_numeric, 
			ref string my_out_nvarchar, 
			ref float? my_out_real, 
			ref byte[] my_out_rowversion, 
			ref DateTime? my_out_smalldatetime, 
			ref short? my_out_smallint, 
			ref decimal? my_out_smallmoney, 
			ref object my_out_sql_variant, 
			ref string my_out_text, 
			ref TimeSpan? my_out_time, 
			ref byte[] my_out_timestamp, 
			ref byte? my_out_tinyint, 
			ref Guid? my_out_uniqueidentifier, 
			ref byte[] my_out_varbinary, 
			ref string my_out_varchar, 
			ref string my_out_xml, 
			ref long? my_inout_bigint, 
			sds.SqlTransaction tranˡ = null
		)
		{
			const string schemaˡ = "dbo" ; 
			const string spˡ = "CodegenTestParameters" ; 
			 
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>() ;
			sds.SqlParameter paramˡmy_in_bigint = base.AddParameterˡ( parametersˡ, "@my_in_bigint", my_in_bigint, sd.SqlDbType.BigInt, true, null, 19, 0 ) ; 
			sds.SqlParameter paramˡmy_in_binary = base.AddParameterˡ( parametersˡ, "@my_in_binary", my_in_binary, sd.SqlDbType.Binary, true, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_in_bit = base.AddParameterˡ( parametersˡ, "@my_in_bit", my_in_bit, sd.SqlDbType.Bit, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_char = base.AddParameterˡ( parametersˡ, "@my_in_char", my_in_char, sd.SqlDbType.Char, true, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_in_date = base.AddParameterˡ( parametersˡ, "@my_in_date", my_in_date, sd.SqlDbType.Date, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_datetime = base.AddParameterˡ( parametersˡ, "@my_in_datetime", my_in_datetime, sd.SqlDbType.DateTime, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_datetime2 = base.AddParameterˡ( parametersˡ, "@my_in_datetime2", my_in_datetime2, sd.SqlDbType.DateTime2, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_datetimeoffset = base.AddParameterˡ( parametersˡ, "@my_in_datetimeoffset", my_in_datetimeoffset, sd.SqlDbType.DateTimeOffset, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_decimal = base.AddParameterˡ( parametersˡ, "@my_in_decimal", my_in_decimal, sd.SqlDbType.Decimal, true, null, 28, 12 ) ; 
			sds.SqlParameter paramˡmy_in_float = base.AddParameterˡ( parametersˡ, "@my_in_float", my_in_float, sd.SqlDbType.Float, true, null, 53, null ) ; 
			sds.SqlParameter paramˡmy_in_geography = base.AddParameterUdtˡ( parametersˡ, "@my_in_geography", my_in_geography, "geography", true, -1 ) ; 
			sds.SqlParameter paramˡmy_in_geometry = base.AddParameterUdtˡ( parametersˡ, "@my_in_geometry", my_in_geometry, "geometry", true, -1 ) ; 
			sds.SqlParameter paramˡmy_in_hierarchyid = base.AddParameterUdtˡ( parametersˡ, "@my_in_hierarchyid", my_in_hierarchyid, "hierarchyid", true, 892 ) ; 
			sds.SqlParameter paramˡmy_in_image = base.AddParameterˡ( parametersˡ, "@my_in_image", my_in_image, sd.SqlDbType.Image, true, 2147483647, null, null ) ; 
			sds.SqlParameter paramˡmy_in_int = base.AddParameterˡ( parametersˡ, "@my_in_int", my_in_int, sd.SqlDbType.Int, true, null, 10, 0 ) ; 
			sds.SqlParameter paramˡmy_in_money = base.AddParameterˡ( parametersˡ, "@my_in_money", my_in_money, sd.SqlDbType.Money, true, null, 19, 4 ) ; 
			sds.SqlParameter paramˡmy_in_nchar = base.AddParameterˡ( parametersˡ, "@my_in_nchar", my_in_nchar, sd.SqlDbType.NChar, true, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_in_ntext = base.AddParameterˡ( parametersˡ, "@my_in_ntext", my_in_ntext, sd.SqlDbType.NText, true, 1073741823, null, null ) ; 
			sds.SqlParameter paramˡmy_in_numeric = base.AddParameterˡ( parametersˡ, "@my_in_numeric", my_in_numeric, sd.SqlDbType.Decimal, true, null, 28, 12 ) ; 
			sds.SqlParameter paramˡmy_in_nvarchar = base.AddParameterˡ( parametersˡ, "@my_in_nvarchar", my_in_nvarchar, sd.SqlDbType.NVarChar, true, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_in_real = base.AddParameterˡ( parametersˡ, "@my_in_real", my_in_real, sd.SqlDbType.Real, true, null, 24, null ) ; 
			sds.SqlParameter paramˡmy_in_rowversion = base.AddParameterˡ( parametersˡ, "@my_in_rowversion", my_in_rowversion, sd.SqlDbType.Timestamp, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_smalldatetime = base.AddParameterˡ( parametersˡ, "@my_in_smalldatetime", my_in_smalldatetime, sd.SqlDbType.SmallDateTime, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_smallint = base.AddParameterˡ( parametersˡ, "@my_in_smallint", my_in_smallint, sd.SqlDbType.SmallInt, true, null, 5, 0 ) ; 
			sds.SqlParameter paramˡmy_in_smallmoney = base.AddParameterˡ( parametersˡ, "@my_in_smallmoney", my_in_smallmoney, sd.SqlDbType.SmallMoney, true, null, 10, 4 ) ; 
			sds.SqlParameter paramˡmy_in_sql_variant = base.AddParameterˡ( parametersˡ, "@my_in_sql_variant", my_in_sql_variant, sd.SqlDbType.Variant, true, 0, null, null ) ; 
			sds.SqlParameter paramˡmy_in_text = base.AddParameterˡ( parametersˡ, "@my_in_text", my_in_text, sd.SqlDbType.Text, true, 2147483647, null, null ) ; 
			sds.SqlParameter paramˡmy_in_time = base.AddParameterˡ( parametersˡ, "@my_in_time", my_in_time, sd.SqlDbType.Time, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_timestamp = base.AddParameterˡ( parametersˡ, "@my_in_timestamp", my_in_timestamp, sd.SqlDbType.Timestamp, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_tinyint = base.AddParameterˡ( parametersˡ, "@my_in_tinyint", my_in_tinyint, sd.SqlDbType.TinyInt, true, null, 3, 0 ) ; 
			sds.SqlParameter paramˡmy_in_uniqueidentifier = base.AddParameterˡ( parametersˡ, "@my_in_uniqueidentifier", my_in_uniqueidentifier, sd.SqlDbType.UniqueIdentifier, true, null, null, null ) ; 
			sds.SqlParameter paramˡmy_in_varbinary = base.AddParameterˡ( parametersˡ, "@my_in_varbinary", my_in_varbinary, sd.SqlDbType.VarBinary, true, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_in_varchar = base.AddParameterˡ( parametersˡ, "@my_in_varchar", my_in_varchar, sd.SqlDbType.VarChar, true, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_in_xml = base.AddParameterˡ( parametersˡ, "@my_in_xml", my_in_xml, sd.SqlDbType.Xml, true, -1, null, null ) ; 
			sds.SqlParameter paramˡmy_out_bigint = base.AddParameterˡ( parametersˡ, "@my_out_bigint", my_out_bigint, sd.SqlDbType.BigInt, false, null, 19, 0 ) ; 
			sds.SqlParameter paramˡmy_out_binary = base.AddParameterˡ( parametersˡ, "@my_out_binary", my_out_binary, sd.SqlDbType.Binary, false, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_out_bit = base.AddParameterˡ( parametersˡ, "@my_out_bit", my_out_bit, sd.SqlDbType.Bit, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_char = base.AddParameterˡ( parametersˡ, "@my_out_char", my_out_char, sd.SqlDbType.Char, false, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_out_date = base.AddParameterˡ( parametersˡ, "@my_out_date", my_out_date, sd.SqlDbType.Date, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_datetime = base.AddParameterˡ( parametersˡ, "@my_out_datetime", my_out_datetime, sd.SqlDbType.DateTime, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_datetime2 = base.AddParameterˡ( parametersˡ, "@my_out_datetime2", my_out_datetime2, sd.SqlDbType.DateTime2, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_datetimeoffset = base.AddParameterˡ( parametersˡ, "@my_out_datetimeoffset", my_out_datetimeoffset, sd.SqlDbType.DateTimeOffset, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_decimal = base.AddParameterˡ( parametersˡ, "@my_out_decimal", my_out_decimal, sd.SqlDbType.Decimal, false, null, 28, 12 ) ; 
			sds.SqlParameter paramˡmy_out_float = base.AddParameterˡ( parametersˡ, "@my_out_float", my_out_float, sd.SqlDbType.Float, false, null, 53, null ) ; 
			sds.SqlParameter paramˡmy_out_geography = base.AddParameterUdtˡ( parametersˡ, "@my_out_geography", my_out_geography, "geography", false, -1 ) ; 
			sds.SqlParameter paramˡmy_out_geometry = base.AddParameterUdtˡ( parametersˡ, "@my_out_geometry", my_out_geometry, "geometry", false, -1 ) ; 
			sds.SqlParameter paramˡmy_out_hierarchyid = base.AddParameterUdtˡ( parametersˡ, "@my_out_hierarchyid", my_out_hierarchyid, "hierarchyid", false, 892 ) ; 
			sds.SqlParameter paramˡmy_out_image = base.AddParameterˡ( parametersˡ, "@my_out_image", my_out_image, sd.SqlDbType.VarBinary, false, -1, null, null ) ; 
			sds.SqlParameter paramˡmy_out_int = base.AddParameterˡ( parametersˡ, "@my_out_int", my_out_int, sd.SqlDbType.Int, false, null, 10, 0 ) ; 
			sds.SqlParameter paramˡmy_out_money = base.AddParameterˡ( parametersˡ, "@my_out_money", my_out_money, sd.SqlDbType.Money, false, null, 19, 4 ) ; 
			sds.SqlParameter paramˡmy_out_nchar = base.AddParameterˡ( parametersˡ, "@my_out_nchar", my_out_nchar, sd.SqlDbType.NChar, false, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_out_ntext = base.AddParameterˡ( parametersˡ, "@my_out_ntext", my_out_ntext, sd.SqlDbType.NVarChar, false, -1, null, null ) ; 
			sds.SqlParameter paramˡmy_out_numeric = base.AddParameterˡ( parametersˡ, "@my_out_numeric", my_out_numeric, sd.SqlDbType.Decimal, false, null, 28, 12 ) ; 
			sds.SqlParameter paramˡmy_out_nvarchar = base.AddParameterˡ( parametersˡ, "@my_out_nvarchar", my_out_nvarchar, sd.SqlDbType.NVarChar, false, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_out_real = base.AddParameterˡ( parametersˡ, "@my_out_real", my_out_real, sd.SqlDbType.Real, false, null, 24, null ) ; 
			sds.SqlParameter paramˡmy_out_rowversion = base.AddParameterˡ( parametersˡ, "@my_out_rowversion", my_out_rowversion, sd.SqlDbType.Timestamp, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_smalldatetime = base.AddParameterˡ( parametersˡ, "@my_out_smalldatetime", my_out_smalldatetime, sd.SqlDbType.SmallDateTime, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_smallint = base.AddParameterˡ( parametersˡ, "@my_out_smallint", my_out_smallint, sd.SqlDbType.SmallInt, false, null, 5, 0 ) ; 
			sds.SqlParameter paramˡmy_out_smallmoney = base.AddParameterˡ( parametersˡ, "@my_out_smallmoney", my_out_smallmoney, sd.SqlDbType.SmallMoney, false, null, 10, 4 ) ; 
			sds.SqlParameter paramˡmy_out_sql_variant = base.AddParameterˡ( parametersˡ, "@my_out_sql_variant", my_out_sql_variant, sd.SqlDbType.Variant, false, 0, null, null ) ; 
			sds.SqlParameter paramˡmy_out_text = base.AddParameterˡ( parametersˡ, "@my_out_text", my_out_text, sd.SqlDbType.VarChar, false, -1, null, null ) ; 
			sds.SqlParameter paramˡmy_out_time = base.AddParameterˡ( parametersˡ, "@my_out_time", my_out_time, sd.SqlDbType.Time, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_timestamp = base.AddParameterˡ( parametersˡ, "@my_out_timestamp", my_out_timestamp, sd.SqlDbType.Timestamp, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_tinyint = base.AddParameterˡ( parametersˡ, "@my_out_tinyint", my_out_tinyint, sd.SqlDbType.TinyInt, false, null, 3, 0 ) ; 
			sds.SqlParameter paramˡmy_out_uniqueidentifier = base.AddParameterˡ( parametersˡ, "@my_out_uniqueidentifier", my_out_uniqueidentifier, sd.SqlDbType.UniqueIdentifier, false, null, null, null ) ; 
			sds.SqlParameter paramˡmy_out_varbinary = base.AddParameterˡ( parametersˡ, "@my_out_varbinary", my_out_varbinary, sd.SqlDbType.VarBinary, false, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_out_varchar = base.AddParameterˡ( parametersˡ, "@my_out_varchar", my_out_varchar, sd.SqlDbType.VarChar, false, 3, null, null ) ; 
			sds.SqlParameter paramˡmy_out_xml = base.AddParameterˡ( parametersˡ, "@my_out_xml", my_out_xml, sd.SqlDbType.Xml, false, -1, null, null ) ; 
			sds.SqlParameter paramˡmy_inout_bigint = base.AddParameterˡ( parametersˡ, "@my_inout_bigint", my_inout_bigint, sd.SqlDbType.BigInt, false, null, 19, 0 ) ; 
			sds.SqlParameter paramˡrcˡ = base.AddParameterReturnValueˡ( parametersˡ, "@rcˡ" ) ; 
			 
			sd.DataSet dsˡ = base.Executeˡ( connˡ, tranˡ, schemaˡ, spˡ, parametersˡ ) ;
			 
			my_out_bigint = base.GetParameterValueˡ<long?>( paramˡmy_out_bigint ) ;
			my_out_binary = base.GetParameterValueˡ<byte[]>( paramˡmy_out_binary ) ;
			my_out_bit = base.GetParameterValueˡ<bool?>( paramˡmy_out_bit ) ;
			my_out_char = base.GetParameterValueˡ<string>( paramˡmy_out_char ) ;
			my_out_date = base.GetParameterValueˡ<DateTime?>( paramˡmy_out_date ) ;
			my_out_datetime = base.GetParameterValueˡ<DateTime?>( paramˡmy_out_datetime ) ;
			my_out_datetime2 = base.GetParameterValueˡ<DateTime?>( paramˡmy_out_datetime2 ) ;
			my_out_datetimeoffset = base.GetParameterValueˡ<DateTimeOffset?>( paramˡmy_out_datetimeoffset ) ;
			my_out_decimal = base.GetParameterValueˡ<decimal?>( paramˡmy_out_decimal ) ;
			my_out_float = base.GetParameterValueˡ<double?>( paramˡmy_out_float ) ;
			my_out_geography = base.GetParameterValueˡ<mst.SqlGeography>( paramˡmy_out_geography ) ;
			my_out_geometry = base.GetParameterValueˡ<mst.SqlGeometry>( paramˡmy_out_geometry ) ;
			my_out_hierarchyid = base.GetParameterValueˡ<mst.SqlHierarchyId?>( paramˡmy_out_hierarchyid ) ;
			my_out_image = base.GetParameterValueˡ<byte[]>( paramˡmy_out_image ) ;
			my_out_int = base.GetParameterValueˡ<int?>( paramˡmy_out_int ) ;
			my_out_money = base.GetParameterValueˡ<decimal?>( paramˡmy_out_money ) ;
			my_out_nchar = base.GetParameterValueˡ<string>( paramˡmy_out_nchar ) ;
			my_out_ntext = base.GetParameterValueˡ<string>( paramˡmy_out_ntext ) ;
			my_out_numeric = base.GetParameterValueˡ<decimal?>( paramˡmy_out_numeric ) ;
			my_out_nvarchar = base.GetParameterValueˡ<string>( paramˡmy_out_nvarchar ) ;
			my_out_real = base.GetParameterValueˡ<float?>( paramˡmy_out_real ) ;
			my_out_rowversion = base.GetParameterValueˡ<byte[]>( paramˡmy_out_rowversion ) ;
			my_out_smalldatetime = base.GetParameterValueˡ<DateTime?>( paramˡmy_out_smalldatetime ) ;
			my_out_smallint = base.GetParameterValueˡ<short?>( paramˡmy_out_smallint ) ;
			my_out_smallmoney = base.GetParameterValueˡ<decimal?>( paramˡmy_out_smallmoney ) ;
			my_out_sql_variant = base.GetParameterValueˡ<object>( paramˡmy_out_sql_variant ) ;
			my_out_text = base.GetParameterValueˡ<string>( paramˡmy_out_text ) ;
			my_out_time = base.GetParameterValueˡ<TimeSpan?>( paramˡmy_out_time ) ;
			my_out_timestamp = base.GetParameterValueˡ<byte[]>( paramˡmy_out_timestamp ) ;
			my_out_tinyint = base.GetParameterValueˡ<byte?>( paramˡmy_out_tinyint ) ;
			my_out_uniqueidentifier = base.GetParameterValueˡ<Guid?>( paramˡmy_out_uniqueidentifier ) ;
			my_out_varbinary = base.GetParameterValueˡ<byte[]>( paramˡmy_out_varbinary ) ;
			my_out_varchar = base.GetParameterValueˡ<string>( paramˡmy_out_varchar ) ;
			my_out_xml = base.GetParameterValueˡ<string>( paramˡmy_out_xml ) ;
			my_inout_bigint = base.GetParameterValueˡ<long?>( paramˡmy_inout_bigint ) ;
			return base.GetParameterValueˡ<int>( paramˡrcˡ ) ;
		}
	}

}

