
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.northwind.codegen;

namespace alby.northwind.codegen.storedProcedure
{
	public partial class MyVarmaxUnicodeTableType1٠ttlist : scg.List< MyVarmaxUnicodeTableType1٠tt >, scg.IEnumerable< mss.SqlDataRecord >
	{
		scg.List< MyVarmaxUnicodeTableType1٠tt > _list = null ;
		 
		public MyVarmaxUnicodeTableType1٠ttlist( scg.List< MyVarmaxUnicodeTableType1٠tt > list )
		{
			_list = list ;
		}
		 
		scg.IEnumerator< mss.SqlDataRecord > scg.IEnumerable< mss.SqlDataRecord >.GetEnumerator()
		{
			var sdr = new mss.SqlDataRecord
			(
				new mss.SqlMetaData( "MyVarBinary", sd.SqlDbType.VarBinary, -1 ) ,
				new mss.SqlMetaData( "MyVarChar", sd.SqlDbType.VarChar, -1 ) ,
				new mss.SqlMetaData( "MyNVarChar", sd.SqlDbType.NVarChar, -1 ) ,
				new mss.SqlMetaData( "MyText", sd.SqlDbType.Text ) ,
				new mss.SqlMetaData( "MyNText", sd.SqlDbType.NText ) ,
				new mss.SqlMetaData( "MyImage", sd.SqlDbType.Image ) ,
				new mss.SqlMetaData( "MyXml", sd.SqlDbType.Xml ) 
			) ;
			 
			foreach ( var i in this._list ) 
			{
				if ( i.MyVarBinary == null )
					sdr.SetDBNull( 0 ) ;
				else
					sdr.SetBytes( 0, 0, i.MyVarBinary, 0, i.MyVarBinary.Length ) ; 
			 
				if ( i.MyVarChar == null )
					sdr.SetDBNull( 1 ) ;
				else
					sdr.SetString( 1, i.MyVarChar ) ; 
			 
				if ( i.MyNVarChar == null )
					sdr.SetDBNull( 2 ) ;
				else
					sdr.SetString( 2, i.MyNVarChar ) ; 
			 
				if ( i.MyText == null )
					sdr.SetDBNull( 3 ) ;
				else
					sdr.SetString( 3, i.MyText ) ; 
			 
				if ( i.MyNText == null )
					sdr.SetDBNull( 4 ) ;
				else
					sdr.SetString( 4, i.MyNText ) ; 
			 
				if ( i.MyImage == null )
					sdr.SetDBNull( 5 ) ;
				else
					sdr.SetBytes( 5, 0, i.MyImage, 0, i.MyImage.Length ) ; 
			 
				if ( i.MyXml == null )
					sdr.SetDBNull( 6 ) ;
				else
					sdr.SetString( 6, i.MyXml ) ; 
			 
				yield return sdr ; 
			}
			 
		}

	}

}

