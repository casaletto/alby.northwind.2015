
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.northwind.codegen;

namespace alby.northwind.codegen.storedProcedure
{
	public partial class CodegenTestStoredProcVarmaxUnicodeTest٠rs1 : acr.RowBase
	{
		public const string column٠LenMyBinary  = "LenMyBinary" ;
		public const string column٠LenMyVarBinary  = "LenMyVarBinary" ;
		public const string column٠LenMyChar  = "LenMyChar" ;
		public const string column٠LenMyNChar  = "LenMyNChar" ;
		public const string column٠LenMyVarChar  = "LenMyVarChar" ;
		public const string column٠LenMyNVarChar  = "LenMyNVarChar" ;
		public const string column٠LenMyText  = "LenMyText" ;
		public const string column٠LenMyNText  = "LenMyNText" ;
		public const string column٠LenMyImage  = "LenMyImage" ;
		public const string column٠LenMyXml  = "LenMyXml" ;
		 
		public int? LenMyBinary
		{
			get
			{
				return base.GetValueˡ<int?>( _dicˡ, column٠LenMyBinary ) ; 
			}
			set
			{
				base.SetValueˡ<int?>( _dicˡ, column٠LenMyBinary, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public long? LenMyVarBinary
		{
			get
			{
				return base.GetValueˡ<long?>( _dicˡ, column٠LenMyVarBinary ) ; 
			}
			set
			{
				base.SetValueˡ<long?>( _dicˡ, column٠LenMyVarBinary, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public int? LenMyChar
		{
			get
			{
				return base.GetValueˡ<int?>( _dicˡ, column٠LenMyChar ) ; 
			}
			set
			{
				base.SetValueˡ<int?>( _dicˡ, column٠LenMyChar, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public int? LenMyNChar
		{
			get
			{
				return base.GetValueˡ<int?>( _dicˡ, column٠LenMyNChar ) ; 
			}
			set
			{
				base.SetValueˡ<int?>( _dicˡ, column٠LenMyNChar, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public long? LenMyVarChar
		{
			get
			{
				return base.GetValueˡ<long?>( _dicˡ, column٠LenMyVarChar ) ; 
			}
			set
			{
				base.SetValueˡ<long?>( _dicˡ, column٠LenMyVarChar, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public long? LenMyNVarChar
		{
			get
			{
				return base.GetValueˡ<long?>( _dicˡ, column٠LenMyNVarChar ) ; 
			}
			set
			{
				base.SetValueˡ<long?>( _dicˡ, column٠LenMyNVarChar, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public int? LenMyText
		{
			get
			{
				return base.GetValueˡ<int?>( _dicˡ, column٠LenMyText ) ; 
			}
			set
			{
				base.SetValueˡ<int?>( _dicˡ, column٠LenMyText, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public int? LenMyNText
		{
			get
			{
				return base.GetValueˡ<int?>( _dicˡ, column٠LenMyNText ) ; 
			}
			set
			{
				base.SetValueˡ<int?>( _dicˡ, column٠LenMyNText, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public int? LenMyImage
		{
			get
			{
				return base.GetValueˡ<int?>( _dicˡ, column٠LenMyImage ) ; 
			}
			set
			{
				base.SetValueˡ<int?>( _dicˡ, column٠LenMyImage, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public long? LenMyXml
		{
			get
			{
				return base.GetValueˡ<long?>( _dicˡ, column٠LenMyXml ) ; 
			}
			set
			{
				base.SetValueˡ<long?>( _dicˡ, column٠LenMyXml, value, ref _dirtyˡ ) ; 
			}
		}
		 
		public CodegenTestStoredProcVarmaxUnicodeTest٠rs1() : base()
		{
			base._dicˡ[ column٠LenMyBinary ] = null ;
			base._dicˡ[ column٠LenMyVarBinary ] = null ;
			base._dicˡ[ column٠LenMyChar ] = null ;
			base._dicˡ[ column٠LenMyNChar ] = null ;
			base._dicˡ[ column٠LenMyVarChar ] = null ;
			base._dicˡ[ column٠LenMyNVarChar ] = null ;
			base._dicˡ[ column٠LenMyText ] = null ;
			base._dicˡ[ column٠LenMyNText ] = null ;
			base._dicˡ[ column٠LenMyImage ] = null ;
			base._dicˡ[ column٠LenMyXml ] = null ;
		 
		}

	}

}

